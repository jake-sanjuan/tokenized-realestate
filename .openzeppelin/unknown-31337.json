{
  "manifestVersion": "3.1",
  "impls": {
    "232620131a5a6f8eac563c08e7107799f156d6a1a1d038bb51a31b78fe40b38c": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x2885ab7c0de768c1d10cf04f017616b082af50e9ff7e3364d166be0aecb4fa2f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)4244_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)3787_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:480"
          },
          {
            "contract": "Bridge",
            "label": "licensed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Bridge.sol:35"
          },
          {
            "contract": "Bridge",
            "label": "owner",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Bridge.sol:36"
          },
          {
            "contract": "Bridge",
            "label": "approved",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Bridge.sol:37"
          },
          {
            "contract": "Bridge",
            "label": "newOwner",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/Bridge.sol:38"
          },
          {
            "contract": "Bridge",
            "label": "registeringAgent",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Bridge.sol:39"
          },
          {
            "contract": "Bridge",
            "label": "numAgentApprovals",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Bridge.sol:40"
          },
          {
            "contract": "Bridge",
            "label": "awaitingApproval",
            "type": "t_mapping(t_address,t_struct(Property)4481_storage)",
            "src": "contracts/Bridge.sol:41"
          },
          {
            "contract": "Bridge",
            "label": "ownerToIdToPropertyApproved",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Property)4481_storage))",
            "src": "contracts/Bridge.sol:42"
          },
          {
            "contract": "Bridge",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts/Bridge.sol:54"
          },
          {
            "contract": "Bridge",
            "label": "linkQueries",
            "type": "t_contract(BridgeLinkQueries)5620",
            "src": "contracts/Bridge.sol:56"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Property)4481_storage)": {
            "label": "mapping(address => struct Bridge.Property)"
          },
          "t_struct(Property)4481_storage": {
            "label": "struct Bridge.Property",
            "members": [
              {
                "label": "propertyOwner",
                "type": "t_bytes32"
              },
              {
                "label": "propertyAddress",
                "type": "t_bytes32"
              },
              {
                "label": "currentPrice",
                "type": "t_uint256"
              },
              {
                "label": "changePriceCount",
                "type": "t_uint256"
              },
              {
                "label": "saleApproved",
                "type": "t_bool"
              },
              {
                "label": "paid",
                "type": "t_bool"
              },
              {
                "label": "previousPrices",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Property)4481_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Bridge.Property))"
          },
          "t_mapping(t_uint256,t_struct(Property)4481_storage)": {
            "label": "mapping(uint256 => struct Bridge.Property)"
          },
          "t_contract(BridgeLinkQueries)5620": {
            "label": "contract BridgeLinkQueries"
          },
          "t_mapping(t_address,t_struct(UintSet)4244_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)4244_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3965_storage"
              }
            ]
          },
          "t_struct(Set)3965_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)3787_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)3530_storage"
              }
            ]
          },
          "t_struct(Map)3530_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)3522_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)3522_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)3522_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0x52c9be0ab70f72512f49bb48732a9065e7375148954544397ec32cd4022ff196"
  }
}
